/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/VALTJU986jR
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { getRecommendationStats } from "@/lib/get-recommendation-effectiveness";
import { formatPercentage, formatTime, formatTimeSpent } from "@/lib/utils";
import { EngagementWithDetails, Recommendation } from "@/models";

export function Dashboard({
  engagements,
  recommendations,
}: {
  engagements: EngagementWithDetails[];
  recommendations: Recommendation[];
}) {
  const { usedRecommendations, effectivenessRate } = getRecommendationStats(
    recommendations,
    engagements
  );

  return (
    <div className="flex flex-col h-full">
      <main className="flex-1 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 lg:grid-rows-2 gap-6 p-6">
        <Card className="col-span-1 lg:col-span-2 lg:row-span-2">
          <CardHeader>
            <CardTitle>User Engagement</CardTitle>
            <CardDescription>
              Detailed engagement data for each user and course type.
            </CardDescription>
          </CardHeader>
          <CardContent className="max-h-[20lh] overflow-y-scroll">
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>User Id</TableHead>
                  <TableHead>Course Id</TableHead>
                  <TableHead>Timestamp</TableHead>
                  <TableHead>Time Spent</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {engagements?.map((engagement: EngagementWithDetails) => (
                  <TableRow key={engagement._id.toString()}>
                    <TableCell>{engagement.user.name}</TableCell>
                    <TableCell>{engagement.course.title}</TableCell>
                    <TableCell>{formatTime(engagement.timestamp)}</TableCell>
                    <TableCell>{formatTimeSpent(engagement.timeSpent)}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardTitle>Total Engagements</CardTitle>
            <CardDescription>
              The total number of engagements across all users and course types.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="text-5xl font-bold">{engagements.length}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardTitle>Recommendations</CardTitle>
            <CardDescription>
              The number of recommendations given to users and the ratio of used
              recommendations.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid gap-4">
              <div className="flex items-center justify-between">
                <div>Recommendations Given</div>
                <div className="text-2xl font-bold">
                  {recommendations?.length}
                </div>
              </div>
              <div className="flex items-center justify-between">
                <div>Used Recommendations</div>
                <div className="text-2xl font-bold text-blue-600">
                  {usedRecommendations}
                </div>
              </div>
              <div className="flex items-center justify-between">
                <div>Effectiveness Rate</div>
                <div className="text-2xl font-bold text-green-600">
                  {formatPercentage(effectivenessRate)}
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </main>
    </div>
  );
}
